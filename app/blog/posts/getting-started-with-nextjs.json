{
  "title": "Getting Started with Next.js",
  "description": "Learn how to set up your first Next.js project and understand the basics of this powerful React framework.",
  "date": "2023-12-15",
  "slug": "getting-started-with-nextjs",
  "tags": ["Next.js", "React", "Web Development"],
  "content": "Next.js is a powerful React framework that makes it easy to build fast, SEO-friendly web applications. In this post, we'll cover the basics of setting up a Next.js project and explore some of its key features.\n\n## Quick Setup\n\nTo create a new Next.js project, run the following command:\n\n```bash\nnpx create-next-app@latest my-next-app\n```\n\nThis will set up a new Next.js project with all the necessary dependencies and a basic file structure.\n\n## File-Based Routing\n\nOne of the best features of Next.js is its file-based routing system. Simply create a new file in the `pages` directory, and it automatically becomes a route in your application.\n\nFor example:\n\n1. **Root Route**: `pages/index.js` becomes the root route (`/`)\n2. **About Page**: `pages/about.js` becomes the about page (`/about`)\n3. **Dynamic Routes**: `pages/blog/[slug].js` becomes a dynamic route for blog posts\n\n## Server-Side Rendering\n\nNext.js supports both static site generation (SSG) and server-side rendering (SSR) out of the box. This means you can choose the best rendering strategy for each page in your application.\n\nTo use SSR, export a `getServerSideProps` function from your page:\n\n```jsx\nexport async function getServerSideProps(context) {\n  // Fetch data from an API\n  const res = await fetch('https://api.example.com/data')\n  const data = await res.json()\n\n  // Pass data to the page via props\n  return { props: { data } }\n}\n```\n\nThis function will run on every request, allowing you to fetch fresh data each time the page is loaded.\n\n## Conclusion\n\nNext.js provides a robust set of tools and conventions that make it easier to build modern web applications. By leveraging its file-based routing, server-side rendering capabilities, and other features, you can create fast, SEO-friendly sites with ease.\n\nHappy coding!"
}

